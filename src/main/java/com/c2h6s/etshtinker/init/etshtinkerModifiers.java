package com.c2h6s.etshtinker.init;

import com.c2h6s.etshtinker.Modifiers.*;
import slimeknights.tconstruct.library.modifiers.util.ModifierDeferredRegister;
import slimeknights.tconstruct.library.modifiers.util.StaticModifier;

import static com.c2h6s.etshtinker.etshtinker.MOD_ID;

public class etshtinkerModifiers {
    public static ModifierDeferredRegister MODIFIERS = ModifierDeferredRegister.create(MOD_ID);
    public static final StaticModifier<adrenaline>adrenaline_STATIC_MODIFIER= MODIFIERS.register("adrenaline", adrenaline::new);
    public static final StaticModifier<annilate>annilate_STATIC_MODIFIER= MODIFIERS.register("annilate", annilate::new);
    public static final StaticModifier<tightennerve>tightennerve_STATIC_MODIFIER= MODIFIERS.register("tightennerve", tightennerve::new);
    public static final StaticModifier<sharpnessex>sharpnessex_STATIC_MODIFIER= MODIFIERS.register("sharpnessex", sharpnessex::new);
    public static final StaticModifier<gravityaccelerate>gravityaccelerate_STATIC_MODIFIER= MODIFIERS.register("gravityaccelerate", gravityaccelerate::new);
    public static final StaticModifier<overweightex>overweightex_STATIC_MODIFIER= MODIFIERS.register("overweightex", overweightex::new);
    public static final StaticModifier<ragedangery>ragedAngery_STATIC_MODIFIER= MODIFIERS.register("ragedangery", ragedangery::new);
    public static final StaticModifier<fission>fission_STATIC_MODIFIER= MODIFIERS.register("fission", fission::new);
    public static final StaticModifier<mentalism>mentalism_STATIC_MODIFIER= MODIFIERS.register("mentalism", mentalism::new);
    public static final StaticModifier<fluxloaded>fluxloaded_STATIC_MODIFIER= MODIFIERS.register("fluxloaded",fluxloaded::new );
    public static final StaticModifier<thermalenhance>thermalenhance_STATIC_MODIFIER= MODIFIERS.register("thermalenhance", thermalenhance::new);
    public static final StaticModifier<thermalstrike>thermalstrike_STATIC_MODIFIER= MODIFIERS.register("thermalstrike", thermalstrike::new);
    public static final StaticModifier<chainreaction>chainreaction_STATIC_MODIFIER= MODIFIERS.register("chainreaction", chainreaction::new);//链式反应
    public static final StaticModifier<fusion>fusion_STATIC_MODIFIER= MODIFIERS.register("fusion", fusion::new);
    public static final StaticModifier<totalinsane>totalinsane_STATIC_MODIFIER= MODIFIERS.register("totalinsane", totalinsane::new);
    public static final StaticModifier<mindattack>mindattack_STATIC_MODIFIER= MODIFIERS.register("mindattack", mindattack::new);
    public static final StaticModifier<warpattack>warpattack_STATIC_MODIFIER= MODIFIERS.register("warpattack", warpattack::new);
    public static final StaticModifier<gravitymanipulate>gravitymanipulate_STATIC_MODIFIER= MODIFIERS.register("gravitymanipulate", gravitymanipulate::new);
    public static final StaticModifier<masseffect>masseffect_STATIC_MODIFIER= MODIFIERS.register("masseffect", masseffect::new);
    public static final StaticModifier<meteorblessing>meteorblessing_STATIC_MODIFIER= MODIFIERS.register("meteorblessing", meteorblessing::new);
    public static final StaticModifier<godlymetal>godlymetal_STATIC_MODIFIER= MODIFIERS.register("godlymetal", godlymetal::new);
    public static final StaticModifier<mindprotection>mindprotection_STATIC_MODIFIER= MODIFIERS.register("mindprotection", mindprotection::new);
    public static final StaticModifier<worldforceex>worldforceex_STATIC_MODIFIER= MODIFIERS.register("worldforceex", worldforceex::new);
    public static final StaticModifier<controllableannihl>controllableannihl_STATIC_MODIFIER= MODIFIERS.register("controllableannihl", controllableannihl::new);
    public static final StaticModifier<modifiershocking>Modifiershocking_STATIC_MODIFIER= MODIFIERS.register("modifiershocking", modifiershocking::new);
    public static final StaticModifier<invisiiiible>invisiiiible_STATIC_MODIFIER= MODIFIERS.register("invisiiiible", invisiiiible::new);
    public static final StaticModifier<guardless>guardless_STATIC_MODIFIER= MODIFIERS.register("guardless", guardless::new);
    public static final StaticModifier<electrified>electrified_STATIC_MODIFIER= MODIFIERS.register("electrified", electrified::new);
    public static final StaticModifier<extralight>extralight_STATIC_MODIFIER= MODIFIERS.register("extralight", extralight::new);
    public static final StaticModifier<ultradenseex>ultradenseex_STATIC_MODIFIER= MODIFIERS.register("ultradenseex", ultradenseex::new);
    public static final StaticModifier<extraweight>extraweight_STATIC_MODIFIER= MODIFIERS.register("extraweight", extraweight::new);
    public static final StaticModifier<modifiernovasickle>modifiernovasickle_STATIC_MODIFIER= MODIFIERS.register("modifiernovasickle", modifiernovasickle::new);
    public static final StaticModifier<exoblademodifier>exobladeModifier_STATIC_MODIFIER= MODIFIERS.register("exoblademodifier", exoblademodifier::new);
    public static final StaticModifier<lightningarrowmodifier>lightningarrowmodifier_STATIC_MODIFIER= MODIFIERS.register("lightningarrowmodifier", lightningarrowmodifier::new);
    public static final StaticModifier<warpattackex>warpattackEX_STATIC_MODIFIER= MODIFIERS.register("warpattackex", warpattackex::new);
    public static final StaticModifier<modifiershadowaxe>modifiershadowaxe_STATIC_MODIFIER= MODIFIERS.register("modifiershadowaxe", modifiershadowaxe::new);
    public static final StaticModifier<warpengineex>warpengineEX_STATIC_MODIFIER= MODIFIERS.register("warpengineex", warpengineex::new);
    public static final StaticModifier<creativenovasickle>creativenovasickle_STATIC_MODIFIER= MODIFIERS.register("creativenovasickle", creativenovasickle::new);
    public static final StaticModifier<warpengine>warpengine_STATIC_MODIFIER= MODIFIERS.register("warpengine", warpengine::new);
    public static final StaticModifier<warpingenhance>warpingenhance_STATIC_MODIFIER= MODIFIERS.register("warpingenhance", warpingenhance::new);
    public static final StaticModifier<solidex>solidex_STATIC_MODIFIER= MODIFIERS.register("solidex", solidex::new);
    public static final StaticModifier<test>test_STATIC_MODIFIER= MODIFIERS.register("test", test::new);
    public static final StaticModifier<plasmawaveslashmodifier>plasmawaveslashmodifier_STATIC_MODIFIER= MODIFIERS.register("plasmawaveslashmodifier", plasmawaveslashmodifier::new);
    public static final StaticModifier<plasmarrow>plasmarrow_STATIC_MODIFIER= MODIFIERS.register("plasmarrow", plasmarrow::new);
    public static final StaticModifier<iluminate>iluminate_STATIC_MODIFIER= MODIFIERS.register("iluminate", iluminate::new);
    public static final StaticModifier<sidechannelattack>sidechannelattack_STATIC_MODIFIER= MODIFIERS.register("sidechannelattack", sidechannelattack::new);
    public static final StaticModifier<shattered>shattered_STATIC_MODIFIER= MODIFIERS.register("shattered", shattered::new);
    public static final StaticModifier<shocked>shocked_STATIC_MODIFIER= MODIFIERS.register("shocked", shocked::new);
    public static final StaticModifier<chilled>chilled_STATIC_MODIFIER= MODIFIERS.register("chilled", chilled::new);
    public static final StaticModifier<momentoaccel>momentoaccel_STATIC_MODIFIER= MODIFIERS.register("momentoaccel", momentoaccel::new);
    public static final StaticModifier<crunchyshattered>crunchyshattered_STATIC_MODIFIER= MODIFIERS.register("crunchyshattered", crunchyshattered::new);
    public static final StaticModifier<autoionizing>autoionizing_STATIC_MODIFIER= MODIFIERS.register("autoionizing", autoionizing::new);
    public static final StaticModifier<multishotplasma>multishotplasma_STATIC_MODIFIER= MODIFIERS.register("multishotplasma", multishotplasma::new);
    public static final StaticModifier<fastcooling>fastcooling_STATIC_MODIFIER= MODIFIERS.register("fastcooling", fastcooling::new);
    public static final StaticModifier<plasmaenhance>plasmaenhance_STATIC_MODIFIER= MODIFIERS.register("plasmaenhance", plasmaenhance::new);
    public static final StaticModifier<warpprotection>warpprotection_STATIC_MODIFIER= MODIFIERS.register("warpprotection", warpprotection::new);
    public static final StaticModifier<basalzdefence>basalzdefence_STATIC_MODIFIER= MODIFIERS.register("basalzdefence", basalzdefence::new);
    public static final StaticModifier<blitzdefense>blitzdefense_STATIC_MODIFIER= MODIFIERS.register("blitzdefense", blitzdefense::new);
    public static final StaticModifier<blizzdefense>blizzdefense_STATIC_MODIFIER= MODIFIERS.register("blizzdefense", blizzdefense::new);
    public static final StaticModifier<electromotiveforce>electromotiveforce_STATIC_MODIFIER= MODIFIERS.register("electromotiveforce", electromotiveforce::new);
    public static final StaticModifier<solidified>solidified_STATIC_MODIFIER= MODIFIERS.register("solidified", solidified::new);
    public static final StaticModifier<phantomreforged>phantomreforged_STATIC_MODIFIER= MODIFIERS.register("phantomreforged", phantomreforged::new);
    public static final StaticModifier<selfassemble>selfassemble_STATIC_MODIFIER= MODIFIERS.register("selfassemble", selfassemble::new);
    public static final StaticModifier<stellarblessing>stellarblessing_STATIC_MODIFIER= MODIFIERS.register("stellarblessing", stellarblessing::new);
    public static final StaticModifier<reactiveannihlarmor>reactiveannihlarmor_STATIC_MODIFIER= MODIFIERS.register("reactiveannihlarmor", reactiveannihlarmor::new);
    public static final StaticModifier<reactiveexplosivearmor>reactiveexplosivearmor_STATIC_MODIFIER= MODIFIERS.register("reactiveexplosivearmor", reactiveexplosivearmor::new);
    public static final StaticModifier<modifierenchantedsword>modifierenchantedsword_STATIC_MODIFIER= MODIFIERS.register("modifierenchantedsword", modifierenchantedsword::new);
    public static final StaticModifier<manaoverload>manaoverload_STATIC_MODIFIER= MODIFIERS.register("manaoverload", manaoverload::new);
    public static final StaticModifier<thermaldefense>thermaldefense_STATIC_MODIFIER= MODIFIERS.register("thermaldefense", thermaldefense::new);
    public static final StaticModifier<trinityblessing>trinityblessing_STATIC_MODIFIER= MODIFIERS.register("trinityblessing", trinityblessing::new);
    public static final StaticModifier<trinitycurse>trinitycurse_STATIC_MODIFIER= MODIFIERS.register("trinitycurse", trinitycurse::new);
    public static final StaticModifier<unknown>unknown_STATIC_MODIFIER= MODIFIERS.register("unknown", unknown::new);
    public static final StaticModifier<atomorigin>atomorigin_STATIC_MODIFIER= MODIFIERS.register("atomorigin", atomorigin::new);
    public static final StaticModifier<semicrystaline>semicrystaline_STATIC_MODIFIER= MODIFIERS.register("semicrystaline", semicrystaline::new);
    public static final StaticModifier<organiccr>organiccr_STATIC_MODIFIER= MODIFIERS.register("organiccr", organiccr::new);
    public static final StaticModifier<inorganiccr>inorganiccr_STATIC_MODIFIER= MODIFIERS.register("inorganiccr", inorganiccr::new);
    public static final StaticModifier<beconcerted>beconcerted_STATIC_MODIFIER= MODIFIERS.register("beconcerted", beconcerted::new);
    public static final StaticModifier<gracearrival>gracearrival_STATIC_MODIFIER= MODIFIERS.register("gracearrival", gracearrival::new);
    //public static final StaticModifier<ultraviolet>ultraviolet_STATIC_MODIFIER= MODIFIERS.register("ultraviolet", ultraviolet::new);
    public static final StaticModifier<manarepair>manarepair_STATIC_MODIFIER= MODIFIERS.register("manarepair", manarepair::new);
    public static final StaticModifier<nightsedge>nightsedge_STATIC_MODIFIER= MODIFIERS.register("nightsedge", nightsedge::new);
    public static final StaticModifier<hyperfluxloaded>hyperfluxloaded_STATIC_MODIFIER= MODIFIERS.register("hyperfluxloaded", hyperfluxloaded::new);
    public static final StaticModifier<nightsenhance>nightsenhance_STATIC_MODIFIER= MODIFIERS.register("nightsenhance", nightsenhance::new);

    public class etshMekModifier{
        public static ModifierDeferredRegister MODIFIERS = ModifierDeferredRegister.create(MOD_ID);
        public static final StaticModifier<radiationproof>radiationproof_STATIC_MODIFIER= MODIFIERS.register("radiationproof", radiationproof::new);
        public static final StaticModifier<radiationremoval>radiationremoval_STATIC_MODIFIER= MODIFIERS.register("radiationremoval", radiationremoval::new);
    }
}
